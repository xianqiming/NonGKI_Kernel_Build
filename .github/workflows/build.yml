name: Build Controller

permissions:
  contents: write # Allow writing to repository contents (for pushing tags)
  actions: write # Allows triggering actions

on:
  workflow_dispatch:
    inputs:
      kernels_to_build:
        description: "Input need to build kernel name."
        required: true
        default: "op8_oos131_a13 k20p_aosp_a15 mix2s_evox_a15 blackshark4_miui_a11 mi10s_aosp_a15 op8_nameless15_a15 s20_oneui5_a13 mipad4p_lineage_a15 redmi8_4_19_aosp_a15 k40gaming_hyper_a13 note10pro_miui_a13"
      make_release:
        description: "Do you want to create a release?"
        required: true
        type: boolean
        default: true

jobs:
  build_kernel_op8_oos131_a13:
    uses: ./.github/workflows/build_kernel_op8_oos13.1_a13.yml
    secrets: inherit
    if: "contains(inputs.kernels_to_build, 'op8_oos131_a13') || inputs.kernels_to_build == 'all'"
  build_kernel_k20p_aosp_a15:
    uses: ./.github/workflows/build_kernel_k20p_aosp_a15.yml
    secrets: inherit
    if: "contains(inputs.kernels_to_build, 'k20p_aosp_a15') || inputs.kernels_to_build == 'all'"
  build_kernel_mix2s_evox_a15:
    uses: ./.github/workflows/build_kernel_mix2s_evox_a15.yml
    secrets: inherit
    if: "contains(inputs.kernels_to_build, 'mix2s_evox_a15') || inputs.kernels_to_build == 'all'"
  build_kernel_blackshark4_miui_a11:
    uses: ./.github/workflows/build_kernel_blackshark4_miui_a11.yml
    secrets: inherit
    if: "contains(inputs.kernels_to_build, 'blackshark4_miui_a11') || inputs.kernels_to_build == 'all'"
  build_kernel_mi10s_aosp_a15:
    uses: ./.github/workflows/build_kernel_mi10s_aosp_a15.yml
    secrets: inherit
    if: "contains(inputs.kernels_to_build, 'mi10s_aosp_a15') || inputs.kernels_to_build == 'all'"
  build_kernel_op8_nameless15_a15:
    uses: ./.github/workflows/build_kernel_op8_nameless15_a15.yml
    secrets: inherit
    if: "contains(inputs.kernels_to_build, 'op8_nameless15_a15') || inputs.kernels_to_build == 'all'"
  build_kernel_s20_oneui5_a13:
    uses: ./.github/workflows/build_kernel_s20_oneui5.1_a13.yml
    secrets: inherit
    if: "contains(inputs.kernels_to_build, 's20_oneui5_a13') || inputs.kernels_to_build == 'all'"
  build_kernel_mipad4p_lineage_a15:
    uses: ./.github/workflows/build_kernel_mipad4p_lineage_a15.yml
    secrets: inherit
    if: "contains(inputs.kernels_to_build, 'mipad4p_lineage_a15') || inputs.kernels_to_build == 'all'"
  build_kernel_redmi8_4_19_aosp_a15:
    uses: ./.github/workflows/build_kernel_older_redmi8_4.19_aosp_a15.yml
    secrets: inherit
    if: "contains(inputs.kernels_to_build, 'redmi8_4_19_aosp_a15') || inputs.kernels_to_build == 'all'"
  build_kernel_k40gaming_hyper_a13:
    uses: ./.github/workflows/build_kernel_older_k40gaming_hyper_a13.yml
    secrets: inherit
    if: "contains(inputs.kernels_to_build, 'k40gaming_hyper_a13') || inputs.kernels_to_build == 'all'"
  build_kernel_note10pro_miui_a13:
    uses: ./.github/workflows/build_kernel_older_note10pro_miui_a13.yml
    secrets: inherit
    if: "contains(inputs.kernels_to_build, 'note10pro_miui_a13') || inputs.kernels_to_build == 'all'"

  trigger-release:
    runs-on: ubuntu-latest
    needs:
      - build_kernel_op8_oos131_a13
      - build_kernel_k20p_aosp_a15
      - build_kernel_mix2s_evox_a15
      - build_kernel_blackshark4_miui_a11
      - build_kernel_mi10s_aosp_a15
      - build_kernel_op8_nameless15_a15
      - build_kernel_s20_oneui5_a13
      - build_kernel_mipad4p_lineage_a15
      - build_kernel_redmi8_4_19_aosp_a15
      - build_kernel_k40gaming_hyper_a13
      - build_kernel_note10pro_miui_a13
    if: ${{ inputs.make_release }}
    env:
      REPO_OWNER: JackA1ltman
      REPO_NAME: NonGKI_Kernel_Build
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_NAME: "NonGKI Kernel Pre-built"
      RELEASE_NOTES: |
        Below is the codename reference table. Please select the image or archive you need based on this table.

        | Device Name | Codename | Kernel | System | Android | Method | KernelSU | SuSFS | Re:Kernel | Syscall |
        |----------|----------|----------|----------|----------|----------|----------|----------|----------|----------|
        | OnePlus 8 | instantnoodle | 4.19 | OxygenOS/ColorOS 13.1 | 13 | AnyKernel3 | Magic | ✅ | ❌ | ✅ |
        | OnePlus 8 | instantnoodle | 4.19 | Nameless 15 | 15 | AnyKernel3 | rsuntk | ✅ | ❌ | ❌ |
        | Xiaomi Mix2s | polaris | 4.9 | Evolution X 10.X | 15 | AnyKernel3 | SukiSU(U) | ✅ | ✅ | ❌ |
        | Redmi K20 Pro | raphael | 4.14 | Based-AOSP | 15 | AnyKernel3 | rsuntk | ✅ | ❌ | ✅ |
        | Black Shark 4 | penrose | 4.19 | MIUI/JoyUI 12 | 11 | AnyKernel3 | rsuntk | ❌ | ❌ | ❌ |
        | Xiaomi 10S | thyme | 4.19 | Based-AOSP | 15 | AnyKernel3 | rsuntk | ✅ | ❌ | ❌ |
        | Samsung S20 5G | x1q | 4.19 | OneUI 5.1/6.1 | 13/14 | Boot Image | rsuntk | ❌ | ❌ | ❌ |
        | Xiaomi Pad 4(Plus) | clover | 4.19 | LineageOS 22.1 | 15 | AnyKernel3 | SukiSU(U) | ✅ | ❌ | ❌ |
        | Redmi 8 | olive | 4.19 | Based-AOSP | 15 | AnyKernel3 | SukiSU(U) | ✅ | ✅ | ✅ |
        | Redmi K40 Gaming | ares | 4.14 | HyperOS | 13 | AnyKernel3 | rsuntk | ✅ | ❌ | ❌ |
        | Redmi Note 10 Pro | chopin | 4.14 | MIUI 13 | 13 | AnyKernel3 | rsuntk | ✅ | ❌ | ❌ |

        - OnePlus 8 (CN) has been tested and can be used on the OnePlus 9R. Theoretically, it should also work on the OnePlus 8T/8Pro.
        - The Black Shark 4 cannot patch SuSFS due to a kernel defect (missing ANDROID_KABI). To enhance stealth and security, it is the first device to switch from the regular manual hook to [Syscall Hook](https://github.com/backslashxx/KernelSU/issues/5).
        - Samsung S20 5G supported **Snapdragon** only，Exynos doesn't try flash it.
        - Xiaomi Mi Mix 2S has been backported to Cgroup V2, but Cgroup Freezer requires additional system steps to be used and the actual execution of the freezing process is abnormal. It is recommended to use Cgroup UID.
        - The kernel for the Redmi K40 Gaming is compatible with the Poco F3 GT.
        - The kernel for the Redmi Note 10 Pro is compatible with the Poco X3 GT.
        - The KernelSU version is for reference only. It is normal for the KernelSU version embedded in SUSFS to be lower.
        - [Re:Kernel](https://github.com/Sakion-Team/Re-Kernel) is a module used for quickly executing temporary unfreezing of processes during Binder transactions, but it may not necessarily work on all devices.

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Download Artifacts for A12 (Only if A12 Build is successful or input is true or empty)
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      # Get the Latest Tag from GitHub
      - name: Generate and Create New Tag
        run: |
          # Fetch the latest tag from GitHub (this is the latest tag based on the GitHub API)
          LATEST_TAG=$(gh api repos/$REPO_OWNER/$REPO_NAME/tags --jq '.[0].name')
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="v1.4" # if have no any releases.
          fi

          NEW_TAG=$(echo "$LATEST_TAG" | awk -F'-r' '{suffix=$2; if (!suffix) suffix=0; suffix++; printf "%s-r%d", $1, suffix}')
          # NEW_TAG="v1.5-r1"

          # Output the new tag to be used
          echo "New tag: $NEW_TAG"

          # Set the new tag as an environment variable to be used in later steps
          TIME=$(date +"%Y-%m-%d %H:%M.%S")
          echo "TIME=$TIME" >> $GITHUB_ENV
          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV

          # Create the tag in the repository
          git tag $NEW_TAG
          git push --tags

          # Get KernelSU version
          # git clone -b next-susfs https://github.com/KernelSU-Next/KernelSU-Next.git
          # KSU_NEXT_VERSION=$(cd KernelSU-Next && expr $(/usr/bin/git rev-list --count HEAD) + 10200)
          git clone -b master https://github.com/backslashxx/KernelSU.git KernelSU-Magic
          KSU_MAGIC_VERSION=$(cd KernelSU-Magic && expr $(/usr/bin/git rev-list --count HEAD) + 10200 - 32)
          git clone -b susfs-v1.5.7 https://github.com/rsuntk/KernelSU.git KernelSU-rsuntk
          KSU_RSUNTK_VERSION=$(cd KernelSU-rsuntk && expr $(/usr/bin/git rev-list --count HEAD) + 10200)
          git clone -b susfs-main https://github.com/ShirkNeko/SukiSU-Ultra.git KernelSU-SukiSU-Ultra
          KSU_SUKISU_ULTRA_VERSION=$(cd KernelSU-SukiSU-Ultra && expr $(/usr/bin/git rev-list --count HEAD) + 10200)

          # Input release note
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_NOTES" >> $GITHUB_ENV
          # echo "[KernelSU-Next](https://github.com/KernelSU-Next/KernelSU-Next) Version: $KSU_NEXT_VERSION  " >> $GITHUB_ENV
          echo "[KernelSU-Next](https://github.com/KernelSU-Next/KernelSU-Next) Not Supported ❌ !  " >> $GITHUB_ENV
          echo "[KernelSU-Magic](https://github.com/backslashxx/KernelSU) Version: $KSU_MAGIC_VERSION  " >> $GITHUB_ENV
          echo "[KernelSU-rsuntk](https://github.com/rsuntk/KernelSU) Version: $KSU_RSUNTK_VERSION  " >> $GITHUB_ENV
          echo "[KernelSU-SukiSU-Ultra](https://github.com/ShirkNeko/SukiSU-Ultra) Version: $KSU_SUKISU_ULTRA_VERSION  " >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # Create GitHub Release and upload files if make_release is true
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          prerelease: false
          release_name: "${{ env.RELEASE_NAME }} ${{ env.TIME }}"
          body: ${{ env.RELEASE_NOTES }}

      - name: Upload Release Assets Dynamically
        run: |
          # Loop through all files in the downloaded-artifacts directory
          for file in ./downloaded-artifacts/Kernel-*/*; do
              # Skip directories
              if [ -d "$file" ]; then
                  continue
              fi

              # Upload the file to the GitHub release
              echo "Uploading $file..."
              gh release upload ${{ env.NEW_TAG }} "$file"
          done

      # Display Files Uploaded
      - name: Display Files Uploaded
        run: |
          echo "GitHub release created with the following files:"
          ls ./downloaded-artifacts/**/*
